using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FluentAssertions;
using NUnit.Framework;

namespace Euler2_EvenFibonacci
{
    /// <summary>
    /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    /// By starting with 1 and 2, the first 10 terms will be:
    /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
    /// find the sum of the even-valued terms.
    /// </summary>
    class Program
    {
        static void Main(string[] args)
        {
        }
    }

    [TestFixture]
    public class EvenFilterTest
    {
        [Test]
        public void NoEvensReturnsEmpty()
        {
            TestNoEvens(new[] {1});
            TestNoEvens(new[] {1, 3, 5, 7, 5, 9, 345});
        }

        private static void TestNoEvens(int[] ints)
        {
            int[] sequence = new EvenFilter().GetValues(ints);
            sequence.Should().BeEmpty();
        }

        [Test]
        public void WithEvensReturnsEvens()
        {
            TestWithEvens(new []{2}, new[]{2});
            TestWithEvens(new[] { 2, 4, 6, 8, 2 }, new[] { 2, 4, 6, 8, 2 });
        }

        private static void TestWithEvens(int[] ints, IEnumerable<int> expectation)
        {
            int[] sequence = new EvenFilter().GetValues(ints);
            sequence.ShouldAllBeEquivalentTo(expectation);
        }
    }

    public class EvenFilter
    {
        public int[] GetValues(int[] ints)
        {
            return ints.ToList().Where(x => x%2 == 0).ToArray();
        }
    }
}
