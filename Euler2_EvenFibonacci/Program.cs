using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FluentAssertions;
using NUnit.Framework;

namespace Euler2_EvenFibonacci
{
    /// <summary>
    /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    /// By starting with 1 and 2, the first 10 terms will be:
    /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
    /// find the sum of the even-valued terms.
    /// </summary>
    class Program
    {
        static void Main(string[] args)
        {
        }
    }

    [TestFixture]
    public class FibonacciGeneratorTest
    {
        [Test]
        public void StateTests()
        {
            TestSequence(2, new[] { 1 });
            TestSequence(3, new[] { 1, 2});
            TestSequence(4, new[] { 1, 2, 3 });
            TestSequence(5, new[] { 1, 2, 3 });
            

        }

        private static void TestSequence(int upperBound, IEnumerable<int> expected)
        {
            int[] sequence = new FibonacciGenerator().GenerateToLessThan(upperBound);
            sequence.SequenceEqual(expected).Should().BeTrue();
        }

    }

    public class FibonacciGenerator
    {
        public int[] GenerateToLessThan(int upperBound)
        {
            var sequence = new List<int>{1, 2};
            if (upperBound > 3)
            {
                sequence.Add(sequence.Sum());
            }
            return sequence.Where(x => x < upperBound).ToArray();
        }
    }
}
