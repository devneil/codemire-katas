using System;
using System.Linq;
using FluentAssertions;
using NUnit.Framework;

namespace Euler2_EvenFibonacci
{
    /// <summary>
    /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    /// By starting with 1 and 2, the first 10 terms will be:
    /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
    /// find the sum of the even-valued terms.
    /// </summary>
    class Program
    {
        static void Main(string[] args)
        {
            var fibs = new FibonacciGenerator().GenerateToLessThan(4000000);
            var evens = new EvenFilter().GetValues(fibs);
            var result = evens.Sum();

            Console.WriteLine("The result is: {0}", result);
            Console.ReadLine();
        }
    }

    [TestFixture]
    public class ProgramTest
    {
        [Test]
        public void AcceptanceTests()
        {
            Test(3, 2); // 1, 2
            Test(4, 2); // 1, 2, 3
            Test(5, 2); // 1, 2, 3
            Test(6, 2); // 1, 2, 3, 5
            Test(7, 2); // 1, 2, 3, 5
            Test(8, 2); // 1, 2, 3, 5
            Test(9, 10); // 1, 2, 3, 5, 8
        }

        private static void Test(int upperBound, int expected)
        {
            var fibs = new FibonacciGenerator().GenerateToLessThan(upperBound);
            var evens = new EvenFilter().GetValues(fibs);
            var result = evens.Sum();
            result.Should().Be(expected);
        }
    }
}
